#lang racket

(require cKanren)
(require cKanren/miniKanren)
(require cKanren/neq)
(require cKanren/fd)
(require cKanren/absento)

(define MAX-VALUE (make-parameter 11))
(define MIN-VALUE (make-parameter 0))


(define minusfd
  (lambda (a b c)
    (plusfd b c a)))



(define lookupo
  (lambda (x env val)
    (fresh ()
      (symbolo x)
      (fresh (y v rest)
        (symbolo y)
        (== `((,y . ,v) . ,rest) env)
        (conde
          ((== x y) (== v val))
          ((=/= x y) (lookupo x rest val)))))))

(define eval-expo
  (lambda (exp env val)
    (fresh ()
      (conde
        ((symbolo exp) (lookupo exp env val))
        ((numbero exp)
         (numbero val)         
         (dom exp (list (cons (MIN-VALUE) (MAX-VALUE))))
         (dom val (list (cons (MIN-VALUE) (MAX-VALUE))))
         (=fd exp val))
        ((fresh (x body)
           (== `(lambda (,x) ,body) exp)
           (== `(closure ,x ,body ,env) val)
           (symbolo x)))
        ((fresh (e1 e2 x body env1 v)
           (== `(,e1 ,e2) exp)
           (symbolo x)
           (eval-expo e1 env `(closure ,x ,body ,env1))
           (eval-expo e2 env v)
           (eval-expo body `((,x . ,v) . ,env1) val)))
        ((fresh (e1 e2 n1 n2)
           (== `(+ ,e1 ,e2) exp)
           (numbero n1)
           (numbero n2)
           (numbero val)
           (dom n1 (list (cons (MIN-VALUE) (MAX-VALUE))))
           (dom n2 (list (cons (MIN-VALUE) (MAX-VALUE))))
           (dom val (list (cons (MIN-VALUE) (MAX-VALUE))))
           (plusfd n1 n2 val)
           (eval-expo e1 env n1)
           (eval-expo e2 env n2)))
        ((fresh (e1 e2 n1 n2)
           (== `(- ,e1 ,e2) exp)
           (numbero n1)
           (numbero n2)
           (numbero val)
           (dom n1 (list (cons (MIN-VALUE) (MAX-VALUE))))
           (dom n2 (list (cons (MIN-VALUE) (MAX-VALUE))))
           (dom val (list (cons (MIN-VALUE) (MAX-VALUE))))
           (minusfd n1 n2 val)
           (eval-expo e1 env n1)
           (eval-expo e2 env n2)))))))

(define evalo
  (lambda (exp val)
    (fresh ()
      (absento 'closure exp)
      (eval-expo exp '() val))))



(module+ test
  (require cKanren/tester)

  (test "evalo-1"
    (run* (q) (evalo 7 q))
    '(7))

  (test "evalo-2"
    (run 10 (q) (evalo q 6))
    '(6
      (((lambda (_.0) 6) 0)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) 6) 1)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) 6) 2)
       : (=/= ((_.0 . closure))) (sym _.0))
      (+ 0 6)
      (((lambda (_.0) 6) 3)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) 6) 4)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) 6) 5)
       : (=/= ((_.0 . closure))) (sym _.0))
      (+ 1 5)
      (((lambda (_.0) 6) 6)
       : (=/= ((_.0 . closure))) (sym _.0))))
  
  (test "evalo-3"
    (run 1 (exp)
      (fresh (x body e)
        (== `((lambda (,x) ,body) ,e) exp)
        (evalo exp 6)))
    '((((lambda (_.0) 6) 0)
       : (=/= ((_.0 . closure))) (sym _.0))))

  (test "evalo-4"
    (run 10 (exp)
      (fresh (x body e)
        (== `((lambda (,x) ,body) ,e) exp)
        (evalo exp 6)))
    '((((lambda (_.0) 6) 0)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) 6) 1)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) 6) 2)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) 6) 3)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) 6) 4)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) _.0) 6)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) 6) 5)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) 6) 6)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) 6) 7)
       : (=/= ((_.0 . closure))) (sym _.0))
      (((lambda (_.0) 6) 8)
       : (=/= ((_.0 . closure))) (sym _.0))))

  (test "evalo-5"
    (time
      (run 1 (exp)
        (fresh (x y body)
          (== `(lambda (,x) (lambda (,y) ,body)) exp)
          (evalo `((,exp 1) 2) 4))))
    '(((lambda (_.0) (lambda (_.1) 4))
       : (=/= ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))))  

  (test "evalo-6"
    (time
      (run 1 (exp)
        (fresh (x y body)
          (== `(lambda (,x) (lambda (,y) ,body)) exp)
          (evalo `((,exp 1) 2) 4)
          (evalo `((,exp 1) 3) 5))))
    '(((lambda (_.0) (lambda (_.1) (+ 2 _.1)))
       : (=/= ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))))  

  (test "evalo-7"
    (time
      (run 1 (exp)
        (fresh (x y body)
          (== `(lambda (,x) (lambda (,y) ,body)) exp)
          (evalo `((,exp 1) 2) 4)
          (evalo `((,exp 1) 3) 5)
          (evalo `((,exp 2) 3) 7))))
    '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))))

  ;; 7.7 sec
  (test "evalo-8a"
    (time
      (run 1 (exp)
        (fresh (x y body)
          (== `(lambda (,x) (lambda (,y) ,body)) exp)
          (evalo `((,exp 1) 2) 4)
          (evalo `((,exp 1) 3) 5)
          (evalo `((,exp 2) 3) 7)
          (evalo `((,exp 4) 3) 11))))    
    '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))))

  (test "evalo-8b"
    (time
      (run 1 (exp)
        (fresh (x y body)
          (== `(lambda (,x) (lambda (,y) ,body)) exp)
          (evalo `((,exp 4) 3) 11)
          (evalo `((,exp 2) 3) 7)
          (evalo `((,exp 1) 3) 5)
          (evalo `((,exp 1) 2) 4))))    
    '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))))

  (test "evalo-8c"
    (time
     (run 4 (exp)
       (fresh (x y body)
         (== `(lambda (,x) (lambda (,y) ,body)) exp)
         (evalo `((,exp 4) 3) 11)
         (evalo `((,exp 2) 3) 7)
         (evalo `((,exp 1) 3) 5)
         (evalo `((,exp 1) 2) 4))))
    '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.1 (+ _.0 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.0 _.1))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 ((lambda (_.2) _.0) 0)))))
       : (=/= ((_.0 . _.1)) ((_.0 . _.2)) ((_.0 . closure)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))))

  ;; 83 sec  
  (test "evalo-8d"
    (time
     (run 10 (exp)
       (fresh (x y body)
         (== `(lambda (,x) (lambda (,y) ,body)) exp)
         (evalo `((,exp 4) 3) 11)
         (evalo `((,exp 2) 3) 7)
         (evalo `((,exp 1) 3) 5)
         (evalo `((,exp 1) 2) 4))))
    '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.1 (+ _.0 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.0 _.1))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 ((lambda (_.2) _.0) 0)))))
       : (=/= ((_.0 . _.1)) ((_.0 . _.2)) ((_.0 . closure)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 ((lambda (_.2) _.0) 1)))))
       : (=/= ((_.0 . _.1)) ((_.0 . _.2)) ((_.0 . closure)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 ((lambda (_.2) _.0) 2)))))
       : (=/= ((_.0 . _.1)) ((_.0 . _.2)) ((_.0 . closure)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 ((lambda (_.2) _.0) 3)))))
       : (=/= ((_.0 . _.1)) ((_.0 . _.2)) ((_.0 . closure)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 ((lambda (_.2) _.0) 4)))))
       : (=/= ((_.0 . _.1)) ((_.0 . _.2)) ((_.0 . closure)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 ((lambda (_.2) _.0) 5)))))
       : (=/= ((_.0 . _.1)) ((_.0 . _.2)) ((_.0 . closure)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 ((lambda (_.2) _.0) 6)))))
       : (=/= ((_.0 . _.1)) ((_.0 . _.2)) ((_.0 . closure)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))))

(test "evalo-9"
  (time
    (run 1 (exp)
      (evalo `((,exp 1) 2) 4)))
  '(((lambda (_.0) (lambda (_.1) 4))
     : (=/= ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))))

(test "evalo-10"
  (time
    (run 1 (exp)
      (evalo `((,exp 1) 3) 5)
      (evalo `((,exp 1) 2) 4)))
  '(((lambda (_.0) (lambda (_.1) (+ 2 _.1)))
     : (=/= ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))))

(test "evalo-11"
  (time
    (run 1 (exp)
      (evalo `((,exp 2) 3) 7)
      (evalo `((,exp 1) 2) 4)
      (evalo `((,exp 1) 3) 5)))
  '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
     : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))))

(test "evalo-12a"
  (time
    (run 1 (exp)
      (evalo `((,exp 4) 3) 11)
      (evalo `((,exp 2) 3) 7)
      (evalo `((,exp 1) 3) 5)
      (evalo `((,exp 1) 2) 4)))
  '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
     : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))))

(test "evalo-12b"
  (time
    (run 1 (exp)
      (evalo `((,exp 1) 2) 4)
      (evalo `((,exp 1) 3) 5)
      (evalo `((,exp 2) 3) 7)
      (evalo `((,exp 4) 3) 11)))
  '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
     : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))))

  (test "evalo-13"
    (time
      (run 3 (exp)
        (evalo `((,exp 4) 3) 11)
        (evalo `((,exp 2) 3) 7)
        (evalo `((,exp 1) 3) 5)
        (evalo `((,exp 1) 2) 4)))
    '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.1 (+ _.0 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.0 _.1))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))))
  
  ;; 70 seconds
  (test "evalo-14"
    (time
      (run 4 (exp)
        (evalo `((,exp 4) 3) 11)
        (evalo `((,exp 2) 3) 7)
        (evalo `((,exp 1) 3) 5)
        (evalo `((,exp 1) 2) 4)))
    '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.1 (+ _.0 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.0 _.1))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 0)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))))

  ;; 70 seconds
  (test "evalo-15"
    (time
      (run 5 (exp)
        (evalo `((,exp 4) 3) 11)
        (evalo `((,exp 2) 3) 7)
        (evalo `((,exp 1) 3) 5)
        (evalo `((,exp 1) 2) 4)))
    '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.1 (+ _.0 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.0 _.1))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 0)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 1)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))))

  ;; 70 seconds
  (test "evalo-16"
    (time
      (run 8 (exp)
        (evalo `((,exp 4) 3) 11)
        (evalo `((,exp 2) 3) 7)
        (evalo `((,exp 1) 3) 5)
        (evalo `((,exp 1) 2) 4)))
    '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.1 (+ _.0 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.0 _.1))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 0)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 1)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 2)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 3)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 4)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))))
  
  ;; 70 seconds
  (test "evalo-17"
    (time
      (run 12 (exp)
        (evalo `((,exp 4) 3) 11)
        (evalo `((,exp 2) 3) 7)
        (evalo `((,exp 1) 3) 5)
        (evalo `((,exp 1) 2) 4)))
    '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.1 (+ _.0 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.0 _.1))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 0)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 1)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 2)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 3)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 4)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 5)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 6)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 7)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 8)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))))
  
  ;; 70 sec
  (test "evalo-18"
    (time
      (run 15 (exp)
        (evalo `((,exp 4) 3) 11)
        (evalo `((,exp 2) 3) 7)
        (evalo `((,exp 1) 3) 5)
        (evalo `((,exp 1) 2) 4)))
    '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.1 (+ _.0 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.0 _.1))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 0)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 1)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 2)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 3)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 4)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 5)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 6)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 7)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 8)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 9)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 10)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 11)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))))

  ;; 76 sec
  (test "evalo-19"
    (time
      (run 20 (exp)
        (evalo `((,exp 4) 3) 11)
        (evalo `((,exp 2) 3) 7)
        (evalo `((,exp 1) 3) 5)
        (evalo `((,exp 1) 2) 4)))
    '(((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.1 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.1 (+ _.0 _.0))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      ((lambda (_.0) (lambda (_.1) (+ _.0 (+ _.0 _.1))))
       : (=/= ((_.0 . _.1)) ((_.0 . closure)) ((_.1 . closure))) (sym _.0 _.1))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 0)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 1)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 2)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 3)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 4)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 5)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 6)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 7)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 8)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 9)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 10)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.1 (+ _.2 _.1))))) 11)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.2 (+ _.1 _.1))))) 0)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.2 (+ _.1 _.1))))) 1)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.2 (+ _.1 _.1))))) 2)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.2 (+ _.1 _.1))))) 3)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))
      (((lambda (_.0) (lambda (_.1) (lambda (_.2) (+ _.2 (+ _.1 _.1))))) 4)
       : (=/= ((_.0 . closure)) ((_.1 . _.2)) ((_.1 . closure)) ((_.2 . closure))) (sym _.0 _.1 _.2))))
  
)
